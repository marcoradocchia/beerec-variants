[package]
name = "beerec-variants"
authors = ["Marco Radocchia <mar.radocchia@proton.me>"]
description = "Procedural derive macro to generate boilerplate on unit variants enum types"
repository = "https://github.com/marcoradocchia/beerec-variants"
keywords = ["rust", "derive", "macro", "enum", "boilerplate"]
categories = ["rust-patterns"]
readme = "README.md"
version = "0.3.0"
edition = "2024"
license = "MIT"

[lib]
proc-macro = true

[dependencies.darling]
version = "0.21.3"

[dependencies.itertools]
version = "0.14.0"

[dependencies.proc-macro2]
version = "1.0.101"

[dependencies.quote]
version = "1.0.40"

[dependencies.syn]
version = "2.0.106"

[dev-dependencies.macrotest]
version = "1.2.0"

[dev-dependencies.trybuild]
version = "1.0.110"

[lints.clippy]
enum_variant_names = "allow"
map_unwrap_or = "allow"
match_bool = "allow"
match_same_arms = "allow"
module_name_repetitions = "allow"

[lints.clippy.pedantic]
level = "warn"
priority = -1
